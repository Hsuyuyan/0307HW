row_count <- length(data) # 計算 column 與 count 個數。
column_count <- length(strsplit(data[1], ",")[[1]])
row_count <- length(edata) # 計算 column 與 count 個數。
column_count <- length(strsplit(edata[1], ",")[[1]])
row_count <- length(edata) # 計算 column 與 count 個數。
fix_data <- matrix(NA, nrow = row_count, ncol = column_count) # 建立一個空的 NA 矩陣，維度來自於 row_count 與 column_count。
for(row in 1:row_count) {
for(col in 1:column_count) {
fix_data[row,col] <- strsplit(edata[row], ",")[[1]][col] # 執行 for loop 將資料塞入 fix_data。
}
}
write.table(fix_data[2:row_count,], file = "台灣地震歷史資料.csv", sep = ",", col.names = fix_data[1,]) # 將資料輸出，輸出注意一點，因為第一 row 是欄位名稱，所以記得指標要從 2 開始，指標 1 的部分要放到 col.names。
View(fix_data)
View(fix_data)
View(fix_data)
View(fix_data)
edata <- readLines("期末專題/台灣地震歷史資料.csv", encoding="big5") # 讀取資料，是一行一行讀取進來。
edata <- iconv(edata, "big5", "utf8") #將資料轉成 UTF-8。
column_count <- length(strsplit(edata[1], ",")[[1]])
row_count <- length(edata) # 計算 column 與 count 個數。
for(row in 1:row_count) {
for(col in 1:column_count) {
fix_data[row,col] <- strsplit(edata[row], ",")[[1]][col] # 執行 for loop 將資料塞入 fix_data。
}
}
View(fix_data)
View(fix_data)
write.table(fix_data[2:row_count,], file = "台灣地震歷史資料.csv", sep = ",", col.names = fix_data[1,]) # 將資料輸出，輸出注意一點，因為第一 row 是欄位名稱，所以記得指標要從 2 開始，指標 1 的部分要放到 col.names。
View(fix_data)
for(row in 1:row_count) {
for(col in 1:column_count) {
fix_data[row,col] <- strsplit(edata[row], ",")[[1]][col] # 執行 for loop 將資料塞入 fix_data。
}
}
for(row in 1:row_count) {
for(col in 1:column_count) {
fix_data[row,col] <- strsplit(edata[row], ",")[[1]][col] # 執行 for loop 將資料塞入 fix_data。
}
}
View(fix_data)
write.table(fix_data[2:row_count,], file = "台灣地震歷史資料1.csv", sep = ",", col.names = fix_data[1,]) # 將資料輸出，輸出注意一點，因為第一 row 是欄位名稱，所以記得指標要從 2 開始，指標 1 的部分要放到 col.names。
for(row in 1:row_count) {
for(col in 1:column_count) {
fix_data[row,col] <- strsplit(edata[row], ",")[[1]][col] # 執行 for loop 將資料塞入 fix_data。
}
}
write.table(fix_data[2:row_count,], file = "台灣地震歷史資料1.csv", sep = ",", col.names = fix_data[1,]) # 將資料輸出，輸出注意一點，因為第一 row 是欄位名稱，所以記得指標要從 2 開始，指標 1 的部分要放到 col.names。
View(fix_data)
edata <- readLines("期末專題/台灣地震歷史資料.csv", encoding="big5") # 讀取資料，是一行一行讀取進來。
edata <- iconv(edata, "big5", "utf8") #將資料轉成 UTF-8。
column_count <- length(strsplit(edata[1], ",")[[1]])
row_count <- length(edata) # 計算 column 與 count 個數。
fix_data <- matrix(NA, nrow = row_count, ncol = column_count) # 建立一個空的 NA 矩陣，維度來自於 row_count 與 column_count。
for(row in 1:row_count) {
for(col in 1:column_count) {
fix_data[row,col] <- strsplit(edata[row], ",")[[1]][col] # 執行 for loop 將資料塞入 fix_data。
}
}
write.table(fix_data[2:row_count,], file = "台灣地震歷史資料.csv", sep = ",", col.names = fix_data[1,]) # 將資料輸出，輸出注意一點，因為第一 row 是欄位名稱，所以記得指標要從 2 開始，指標 1 的部分要放到 col.names。
View(fix_data)
library(data.table)
EARTHQUAKE<-fread("期末專題/台灣地震歷史資料1.csv",stringsAsFactors = F)
EARTHQUAKE<-data.frame(EARTHQUAKE)
EARTHQUAKE$id<-iconv(as.character(EARTHQUAKE$id),#NAME_2原本是factor
from="big5",to="UTF-8")
#EARTHQUAKE<-read.csv("期末專題/台灣地震歷史資料.csv",stringsAsFactors = F)
head(EARTHQUAKE,10)
View(EARTHQUAKE)
View(EARTHQUAKE)
EARTHQUAKE$desc
EARTHQUAKE<-fread("期末專題/台灣地震歷史資料1.csv",stringsAsFactors = F)
View(EARTHQUAKE)
EARTHQUAKE<-data.frame(EARTHQUAKE)
View(EARTHQUAKE)
install.packages(readxl)
install.packages("readxl")
earEXC<-read_excel(期末專題/台灣地震歷史資料EXC.xlsx)
earEXC<-read_excel(期末專題/台灣地震歷史資料EXC.xlsx)
install.packages("readxl")
earEXC<-read_excel(期末專題/台灣地震歷史資料EXC.xlsx)
earEXC = read.table("台灣地震歷史資料.csv", header = TRUE)
View(earEXC)
earEXC <- read.table("台灣地震歷史資料.csv", header = TRUE)
View(earEXC)
earEXC <- read.table("台灣地震歷史資料EXC.xlsx", header = TRUE)
require(gdata)
install.packages("gdata")
earEXC<-read.xls ("台灣地震歷史資料EXC.xlsx"), sheet = 1, header = TRUE)
earEXC=read.xls ("台灣地震歷史資料EXC.xlsx"), sheet = 1, header = TRUE)
earEXC=read.xls (("台灣地震歷史資料EXC.xlsx"), sheet = 1, header = TRUE)
earEXC=read.xls("台灣地震歷史資料EXC.xlsx", sheet = 1, header = TRUE)
install.packages("gdata")
earEXC=read.xls("台灣地震歷史資料EXC.xlsx", sheet = 1, header = TRUE)
earEXC<-read.xls("台灣地震歷史資料EXC.xlsx", sheet = 1, header = TRUE)
install.packages("xlsReadWrite")
earEXC<-read.xls("台灣地震歷史資料EXC.xlsx", sheet = 1)
earEXC<-read.table("台灣地震歷史資料EXC.xlsx", sheet = 1)
earEXC<-read.table("台灣地震歷史資料EXC.xlsx")
earEXC<-read.xlsx("台灣地震歷史資料EXC.xlsx", sheet = 1, header = TRUE)
earEXC<-read_excel("期末專題/台灣地震歷史資料EXC.xlsx")
earEXC<-read.excel("期末專題/台灣地震歷史資料EXC.xlsx")
xls.getshlib()
install.packages("openxlsx")
earEXC<-read.xlsx("台灣地震歷史資料EXC.xlsx", sheet = 1, header = TRUE)
earEXC<-read_excel("期末專題/台灣地震歷史資料EXC.xlsx")
earEXC<-read.table("台灣地震歷史資料EXC.xlsx")
earEXC<-read_excel("期末專題/台灣地震歷史資料EXC.xlsx")
earEXC<-read.xlsx("期末專題/台灣地震歷史資料EXC.xlsx", sheet = 1, header = TRUE)
earEXC<-read.table("期末專題/台灣地震歷史資料EXC.xlsx")
library(data.table)
EARTHQUAKE<-fread("期末專題/台灣地震歷史資料1.csv",stringsAsFactors = F)
EARTHQUAKE<-data.frame(EARTHQUAKE)
EARTHQUAKE$desc<-iconv(as.character(EARTHQUAKE$desc),#NAME_2原本是factor
from="big5",to="UTF-8")
#EARTHQUAKE<-read.csv("期末專題/台灣地震歷史資料.csv",stringsAsFactors = F)
head(EARTHQUAKE,10)
library(data.table)
EARTHQUAKE<-fread("期末專題/台灣地震歷史資料1.csv",stringsAsFactors = F)
EARTHQUAKE<-data.frame(EARTHQUAKE)
EARTHQUAKE$magnitude<-iconv(as.character(EARTHQUAKE$magnitude),#NAME_2原本是factor
from="big5",to="UTF-8")
#EARTHQUAKE<-read.csv("期末專題/台灣地震歷史資料.csv",stringsAsFactors = F)
head(EARTHQUAKE,20)
EARTHQUAKE$desc<-iconv(as.character(EARTHQUAKE$desc),#NAME_2原本是factor
from="big5",to="UTF-8")
#EARTHQUAKE<-read.csv("期末專題/台灣地震歷史資料.csv",stringsAsFactors = F)
head(EARTHQUAKE,20)
View(fix_data)
View(fix_data)
library(data.table)
EARTHQUAKEa<-fread("期末專題/台灣地震歷史資料1.csv",stringsAsFactors = F)
EARTHQUAKEa<-data.frame(EARTHQUAKEa)
EARTHQUAKEa$desc<-iconv(as.character(EARTHQUAKEa$desc),#NAME_2原本是factor
from="big5",to="UTF-8")
#EARTHQUAKE<-read.csv("期末專題/台灣地震歷史資料.csv",stringsAsFactors = F)
head(EARTHQUAKEa,20)
library(data.table)
EARTHQUAKEa<-fread("期末專題/台灣地震歷史資料.csv",stringsAsFactors = F)
EARTHQUAKEa<-data.frame(EARTHQUAKEa)
EARTHQUAKEa$desc<-iconv(as.character(EARTHQUAKEa$desc),#NAME_2原本是factor
from="big5",to="UTF-8")
#EARTHQUAKE<-read.csv("期末專題/台灣地震歷史資料.csv",stringsAsFactors = F)
head(EARTHQUAKEa,20)
library(data.table)
EARTHQUAKEa<-fread("期末專題/台灣地震歷史資料.csv",stringsAsFactors = F)
EARTHQUAKEa<-data.frame(EARTHQUAKEa)
EARTHQUAKEa$id<-iconv(as.character(EARTHQUAKEa$id),#NAME_2原本是factor
from="big5",to="UTF-8")
#EARTHQUAKE<-read.csv("期末專題/台灣地震歷史資料.csv",stringsAsFactors = F)
head(EARTHQUAKEa,20)
View(totalVectora)
View(totalVector)
xml08<-xmlTreeParse("期末專題/dy_Report_2008.xml", useInternalNodes = TRUE)
xml<-xmlTreeParse("期末專題/dy_Report_2008.xml", useInternalNodes = TRUE)
xmltop <- xmlRoot(xml)
#xmlName(xmltop)
xmlList<-xmlToList(xmltop[[8]])
length(xmlList)
totalVectora<-NULL
for(loc in 1:33){ #33 length(xmlList)
locName<-xmlList[[loc]][[1]]
for (datai in 2:length(xmlList[[loc]][[3]])) { #378
dateTime<-xmlList[[loc]][[3]][[datai]][[1]][[1]] # datetime
value<-xmlList[[loc]][[3]][[datai]][[2]][[1]][[1]] #element
totalVectora<-rbind(totalVectora,c(locName,dateTime,value))
}
}
if (!require('XML')){
install.packages("XML")
library(XML)
}
xml<-xmlTreeParse("期末專題/dy_Report_2008.xml", useInternalNodes = TRUE)
xmltop <- xmlRoot(xml)
#xmlName(xmltop)
xmlList<-xmlToList(xmltop[[8]])
length(xmlList)
totalVectora<-NULL
for(loc in 1:33){ #33 length(xmlList)
locName<-xmlList[[loc]][[1]]
for (datai in 2:length(xmlList[[loc]][[3]])) { #378
dateTime<-xmlList[[loc]][[3]][[datai]][[1]][[1]] # datetime
value<-xmlList[[loc]][[3]][[datai]][[2]][[1]][[1]] #element
totalVectora<-rbind(totalVectora,c(locName,dateTime,value))
}
}
xmlList[[1]] ##for each locations
xmlList[[1]][[1]] ## 1 name
xmlList[[1]][[2]] ## ID
xmlList[[1]][[3]] ## data ---------
length(xmlList[[1]][[3]])
xmlList[[1]][[3]][[1]] # element name
xmlList[[1]][[3]][[2]] # start from2
xmlList[[1]][[3]][[3]]
xmlList[[1]][[3]][[4]]
xmlList[[1]][[3]][[33]]
xmlList[[1]][[3]][[378]]
xmlList[[1]][[3]][[2]][[1]][[1]] # datetime
xmlList[[1]][[3]][[2]][[2]][[1]][[1]] #element
totalVector<-rbind(totalVector,c(locName,dateTime,value))
if (!require('XML')){
install.packages("XML")
library(XML)
}
xml<-xmlTreeParse("期末專題/dy_Report_2008.xml", useInternalNodes = TRUE)
xmltop <- xmlRoot(xml)
#xmlName(xmltop)
xmlList<-xmlToList(xmltop[[8]])
length(xmlList)
totalVectora<-NULL
for(loc in 1:33){ #33 length(xmlList)
locName<-xmlList[[loc]][[1]]
for (datai in 2:length(xmlList[[loc]][[3]])) { #378
dateTime<-xmlList[[loc]][[3]][[datai]][[1]][[1]] # datetime
value<-xmlList[[loc]][[3]][[datai]][[2]][[1]][[1]] #element
totalVectora<-rbind(totalVectora,c(locName,dateTime,value))
}
}
xmlList[[1]] ##for each locations
xmlList[[1]][[1]] ## 1 name
xmlList[[1]][[2]] ## ID
xmlList[[1]][[3]] ## data ---------
length(xmlList[[1]][[3]])
xmlList[[1]][[3]][[1]] # element name
xmlList[[1]][[3]][[2]] # start from2
xmlList[[1]][[3]][[3]]
xmlList[[1]][[3]][[4]]
xmlList[[1]][[3]][[33]]
xmlList[[1]][[3]][[378]]
xmlList[[1]][[3]][[2]][[1]][[1]] # datetime
xmlList[[1]][[3]][[2]][[2]][[1]][[1]] #element
if (!require('XML')){
install.packages("XML")
library(XML)
}
xml<-xmlTreeParse("期末專題/dy_Report_2007.xml", useInternalNodes = TRUE)
xmltop <- xmlRoot(xml)
#xmlName(xmltop)
xmlList<-xmlToList(xmltop[[8]])
length(xmlList)
totalVector<-NULL
for(loc in 1:33){ #33 length(xmlList)
locName<-xmlList[[loc]][[1]]
for (datai in 2:length(xmlList[[loc]][[3]])) { #378
dateTime<-xmlList[[loc]][[3]][[datai]][[1]][[1]] # datetime
value<-xmlList[[loc]][[3]][[datai]][[2]][[1]][[1]] #element
totalVector<-rbind(totalVector,c(locName,dateTime,value))
}
}
xmlList[[1]] ##for each locations
xmlList[[1]][[1]] ## 1 name
xmlList[[1]][[2]] ## ID
xmlList[[1]][[3]] ## data ---------
length(xmlList[[1]][[3]])
xmlList[[1]][[3]][[1]] # element name
xmlList[[1]][[3]][[2]] # start from2
xmlList[[1]][[3]][[3]]
xmlList[[1]][[3]][[4]]
xmlList[[1]][[3]][[33]]
xmlList[[1]][[3]][[378]]
xmlList[[1]][[3]][[2]][[1]][[1]] # datetime
xmlList[[1]][[3]][[2]][[2]][[1]][[1]] #element
View(totalVectora)
xmlList[[1]][[3]][[4]]
xmlList[[1]][[3]][[33]]
xmlList[[1]][[3]][[32]]
xmlList[[1]][[3]][[378]]
xmlList[[1]][[3]][[2]][[2]][[1]][[1]] #element
xmlList[[1]][[3]][[2]][[1]][[1]] # datetime
xmlList[[1]] ##for each locations
xmlList[[1]][[1]] ## 1 name
xmlList[[1]][[2]] ## ID
xmlList[[1]][[3]] ## data ---------
length(xmlList[[1]][[3]])
xmlList[[1]][[3]][[1]] # element name
xmlList[[1]][[3]][[2]] # start from2
xmlList[[1]][[3]][[3]]
xmlList[[1]][[3]][[4]]
xmlList[[1]][[3]][[33]]
xmlList[[1]][[3]][[33]]
xmlList[[1]][[3]][[93]]
xmlList[[1]][[3]][[123]]
xmlList[[1]][[3]][[155]]
xmlList[[1]][[3]][[186]]
xmlList[[1]][[3]][[33]]
xmlList[[1]][[3]][[93]]
xmlList[[1]][[3]][[94]]
xmlList[[1]][[3]][[123]]
xmlList[[1]][[3]][[125]]
xmlList[[1]][[3]][[155]]
xmlList[[1]][[3]][[33]]
locName<-xmlList[[loc]][[1]]
locName<-xmlList[[loc]][[1]]
xmlList[[1]][[3]][[33]]
xmlList[[1]][[3]][[94]]
xmlList[[1]][[3]][[125]]
xmlList[[1]][[3]][[155]]
xmlList[[1]][[3]][[157]]
xmlList[[1]][[3]][[33]]
xmlList[[1]][[3]][[32]]
xmlList[[1]][[3]][[33]]
xmlList[[1]][[3]][[94]]
xmlList[[1]][[3]][[93]]
xmlList[[1]][[3]][[63]]
xmlList[[1]][[3]][[62]]
xmlList[[1]][[3]][[157]]
xmlList[[1]][[3]][[186]]
xmlList[[1]][[3]][[188]]
xmlList[[1]][[3]][[219]]
xmlList[[1]][[3]][[220]]
xmlList[[1]][[3]][[251]]
xmlList[[1]][[3]][[252]]
xmlList[[1]][[3]][[283]]
xmlList[[1]][[3]][[314]]
xmlList[[1]][[3]][[284]]
xmlList[[1]][[3]][[283]]
314
xmlList[[1]][[3]][[314]]
xmlList[[1]][[3]][[315]]
xmlList[[1]][[3]][[219]]
xmlList[[1]][[3]][[419]]
xmlList[[1]][[3]][[346]]
xmlList[[1]][[3]][[378]]
xmlList<-xmlToList(xmltop[[8]])
length(xmlList)
totalVector<-NULL
for(loc in 1:33){ #33 length(xmlList)
locName<-xmlList[[loc]][[1]]
for (datai in 2:length(xmlList[[loc]][[3]])) { #378
dateTime<-xmlList[[loc]][[3]][[datai]][[1]][[1]] # datetime
value<-xmlList[[loc]][[3]][[datai]][[2]][[1]][[1]] #element
totalVector<-rbind(totalVector,c(locName,dateTime="total",value))
}
}
View(totalVector)
totalVector<-rbind(totalVector,c(locName,dateTime,value))
}
}
xml<-xmlTreeParse("期末專題/dy_Report_2007.xml", useInternalNodes = TRUE)
xmltop <- xmlRoot(xml)
#xmlName(xmltop)
xmlList<-xmlToList(xmltop[[8]])
length(xmlList)
totalVector<-NULL
for(loc in 1:33){ #33 length(xmlList)
locName<-xmlList[[loc]][[1]]
for (datai in 2:length(xmlList[[loc]][[3]])) { #378
dateTime<-xmlList[[loc]][[3]][[datai]][[1]][[1]] # datetime
value<-xmlList[[loc]][[3]][[datai]][[2]][[1]][[1]] #element
totalVector<-rbind(totalVector,c(locName,dateTime,value))
}
}
View(totalVector)
Vector<-#雙號
totalVector[complete.cases(totalVector),]#選資料完整的row
c(nrow(totalVector),nrow(totalV
Data[c(33,62,94,125,157,188,220,252,283,315,346,378),),]
Data[c(33,62,94,125,157,188,220,252,283,315,346,378),]
totalVector[c(33,62,94,125,157,188,220,252,283,315,346,378),]#Data[選Row,選Column],index向量
totalVector[c(32,61,94,125,157,188,220,252,283,315,346,378),]#Data[選Row,選Column],index向量
totalVector[c(32,61,93,124,157,188,220,252,283,315,346,378),]#Data[選Row,選Column],index向量
totalVector[c(32,61,93,124,156,187,219,251,2832,314,345,377),]#Data[選Row,選Column],index向量
totalVector[c(32,61,93,124,156,187,219,251,282,314,345,377),]#Data[選Row,選Column],index向量
totalVector[c(32,61,93,124,156,187,219,251,282,314,345,377),]#Data[選Row,選Column],index向量
totalVector<-#雙號
totalVector[complete.cases(totalVector),]#選資料完整的row
c(nrow(totalVector),nrow(totalVector))
mean(value,na.rm=T)
mean(value,T=na.rm)
xml<-xmlTreeParse("期末專題/dy_Report_2007.xml", useInternalNodes = TRUE)
xmltop <- xmlRoot(xml)
#xmlName(xmltop)
xmlList<-xmlToList(xmltop[[8]])
length(xmlList)
totalVector<-NULL
for(loc in 1:33){ #33 length(xmlList)
locName<-xmlList[[loc]][[1]]
for (datai in 2:length(xmlList[[loc]][[3]])) { #378
dateTime<-xmlList[[loc]][[3]][[datai]][[1]][[1]] # datetime
value<-xmlList[[loc]][[3]][[datai]][[2]][[1]][[1]] #element
totalVector<-rbind(totalVector,c(locName,dateTime,value))
}
}
View(totalVector)
View(totalVector)
totalVector<-#雙號
totalVector[complete.cases(totalVector),]#選資料完整的row
c(nrow(totalVector),nrow(totalVector))
par(mfrow=c(2,1),mar=c(4,4,2,1))#一張圖裡面有2x1個子圖
hist(subset(xml,dateTime="Total")$value,col="green")
hist((xml,dateTime="Total")$value,col="green")
hist(((xml,dateTime="Total")$value),col="green")
rain07<-data.frame(totalVector)
View(rain07)
names(rain07)<-c("loc","date","element")
par(mfrow=c(2,1),mar=c(4,4,2,1))#一張圖裡面有2x1個子圖
hist(subset(rain07,date=="total")$element,col="green")
as.numeric(rain07)
as.numeric(rain07$date)
hist(subset(rain07,date=="total")$element,col="green")
as.double(rain07$date)
hist(subset(rain07,date=="total")$element,col="green")
as.numeric(rain07$element)
as.double(rain07$element)
hist(subset(rain07,date=="total")$element,col="green")
install.packages("rpart")
library(rpart)
BreastCancerC$Class<-factor(BreastCancerC$Class,levels=c("malignant","benign"))
#set.seed(1000)
fit<-rpart(Class~.,data=BreastCancerC[BreastCancerC$Test==F,])
#install.packages("rpart.plot")
library(rpart.plot)
summary(fit)
prp(fit)
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
#install.packages("mlbench")
library(mlbench)
data(BreastCancer)
str(BreastCancer)
#install.packages("rpart")
library(rpart)
BreastCancerC$Class<-factor(BreastCancerC$Class,levels=c("malignant","benign"))
#set.seed(1000)
fit<-rpart(Class~.,data=BreastCancerC[BreastCancerC$Test==F,])
#install.packages("rpart.plot")
library(rpart.plot)
summary(fit)
prp(fit)
#install.packages("mlbench")
library(mlbench)
data(BreastCancer)
str(BreastCancer)
BreastCancerC<-BreastCancer[complete.cases(BreastCancer),
!names(BreastCancer)%in%c("Id")]
c(nrow(BreastCancer),nrow(BreastCancerC))
BreastCancerC$Test<-F
BreastCancerC[
sample(1:nrow(BreastCancerC),nrow(BreastCancerC)/5),]$Test<-T
c(sum(BreastCancerC$Test==F),sum(BreastCancerC$Test==T))
#install.packages("rpart")
library(rpart)
BreastCancerC$Class<-factor(BreastCancerC$Class,levels=c("malignant","benign"))
#set.seed(1000)
fit<-rpart(Class~.,data=BreastCancerC[BreastCancerC$Test==F,])
#install.packages("rpart.plot")
library(rpart.plot)
summary(fit)
prp(fit)
install.packages("rpart")
library(rpart)
BreastCancerC$Class<-factor(BreastCancerC$Class,levels=c("malignant","benign"))
#set.seed(1000)
fit<-rpart(Class~.,data=BreastCancerC[BreastCancerC$Test==F,])
install.packages("rpart.plot")
install.packages("rpart")
library(rpart)
BreastCancerC$Class<-factor(BreastCancerC$Class,levels=c("malignant","benign"))
#set.seed(1000)
fit<-rpart(Class~.,data=BreastCancerC[BreastCancerC$Test==F,])
install.packages("rpart.plot")
install.packages("rpart")
install.packages("rpart")
install.packages("caret")
library(caret)
MinePred<-predict(fit,newdata = BreastCancerC[BreastCancerC$Test==T,],type = "class")
sensitivity(MinePred,BreastCancerC[BreastCancerC$Test==T,]$Class)#敏感度
specificity(MinePred,BreastCancerC[BreastCancerC$Test==T,]$Class)#特異性
posPredValue(MinePred,BreastCancerC[BreastCancerC$Test==T,]$Class)#陽性預測率
negPredValue(MinePred,BreastCancerC[BreastCancerC$Test==T,]$Class)#陰性預測率
install.packages("rpart")
library(rpart)
BreastCancerC$Class<-factor(BreastCancerC$Class,levels=c("malignant","benign"))
#set.seed(1000)
fit<-rpart(Class~.,data=BreastCancerC[BreastCancerC$Test==F,])
install.packages("rpart.plot")
install.packages("rpart")
library(rpart)
BreastCancerC$Class<-factor(BreastCancerC$Class,levels=c("malignant","benign"))
#set.seed(1000)
fit<-rpart(Class~.,data=BreastCancerC[BreastCancerC$Test==F,])
install.packages("rpart.plot")
install.packages("rpart")
head(EARTHQUAKEa,20)
library(data.table)
EARTHQUAKEa<-fread("期末專題/台灣地震歷史資料.csv",stringsAsFactors = F)
EARTHQUAKEa<-data.frame(EARTHQUAKEa)
EARTHQUAKEa$desc<-iconv(as.character(EARTHQUAKEa$desc),from="big5",to="UTF-8")
#EARTHQUAKE<-read.csv("期末專題/台灣地震歷史資料.csv",stringsAsFactors = F)
head(EARTHQUAKEa,20)
EARTHQUAKE$desc
head(mydata,10)
library(data.table)
EARTHQUAKEa<-fread("期末專題/台灣地震歷史資料.csv",stringsAsFactors = F)
EARTHQUAKEa<-data.frame(EARTHQUAKEa)
EARTHQUAKEa$desc<-iconv(as.character(EARTHQUAKEa$desc),from="big5",to="UTF-8")
#EARTHQUAKE<-read.csv("期末專題/台灣地震歷史資料.csv",stringsAsFactors = F)
head(EARTHQUAKEa,20)
#install.packages("data.table")
library(data.table)
RAIN07<-fread("期末專題/RAIN07.csv",stringsAsFactors = F)
RAIN07<-data.frame(RAIN07)
View(RAIN07)
View(RAIN07)
totalRAIN07<-cbind(totalRAIN07,c(dateTime,value))
totalRAIN07<-cbind(RAIN07,c(dateTime,value))
View(totalRAIN07)
View(totalRAIN07)
totalRAIN07<-cbind(c(dateTime,value),RAIN07)
View(totalRAIN07)
RAIN07$desc<-iconv(as.character(RAIN07$desc),from="big5",to="UTF-8")
