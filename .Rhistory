library(knitr)
kable(output, digits=2)
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
#head(NBA1415)
MaxMinutes<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutesPlayed,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
#head(NBA1415)
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutesPlayed,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
#head(NBA1415)
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutesPlayed,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
MaxEfficiency<-aggregate(TotalPoints/TotalMinutesPlayed~Team,NBA1415,max)
NBA1415Efficiency<-merge(NBA1415,MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$MaxEfficiency,decreasing = T),c("Team","Name","MaxEfficiency")]
library(knitr)
kable(output, digits=2)
MaxEfficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(MaxEfficiency~Team,NBA1415,max)
NBA1415Efficiency<-merge(NBA1415,MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$MaxEfficiency,decreasing = T),c("Team","Name","MaxEfficiency")]
library(knitr)
kable(output, digits=2)
MaxEfficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(MaxEfficiency~Team,NBA1415,max)
NBA1415Efficiency<-merge(MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$MaxEfficiency,decreasing = T),c("Team","Name","MaxEfficiency")]
library(knitr)
kable(output, digits=2)
MaxEfficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415Efficiency<-merge(MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits=2)
MaxEfficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415Efficiency<-merge(MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits=2)
efficiency <- NBA1415$TotalPoints /NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
FinalOutput3<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(FinalOutput3, digits=2)
Efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits=2)
Efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits=2)
NBA1415$Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits=2)
Efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits=2)
Efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits=2)
efficiency <- NBA1415$TotalPoints /NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
Output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(Output, digits=2)
head(NBA1415)
head(NBA1415,TEAM=NYK)
head(NBA1415[NBA1415$Team=="SAN",])
efficiency <- NBA1415$TotalPoints /NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
Output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(Output, digits=2)
head(NBA1415[NBA1415$Team=="OKL",])
efficiency <- NBA1415$TotalPoints /NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
Output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
Output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(Output, digits=2)
NBA1415$Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415$Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits=2)
head(NBA1415[NBA1415$Team=="OKL",])
head(NBA1415[NBA1415$Team=="WAS",])
if(!require('SportsAnalytics')){
install.packages("SportsAnalytics")
library(SportsAnalytics)
}
NBA1415<-fetch_NBAPlayerStatistics("14-15")
NBA1415
head(NBA1415)
head(NBA1415[NBA1415$Team=="WAS",])
NBA1415$Efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output,digits = 2)
head(NBA1415[NBA1415$Team=="WAS",])
efficiency <- NBA1415$TotalPoints /NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
Output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(Output, digits=2)
NBA1415$Efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output,digits = 2)
NBA1415$efficiency <- NBA1415$TotalPoints /NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
Output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(Output, digits=2)
NBA1415$Efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output,digits = 2)
NBA1415$ThreePoints<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
MaxThreePoints<-aggregate(ThreePoints~Team,NBA1415,max)
NBA1415MaxThreePoints<-merge(NBA1415,MaxThreePoints)
output<-NBA1415MaxThreePoints[order(NBA1415MaxThreePoints$ThreePoints,decreasing = T),c("Team","Name","ThreePoints")]
library(knitr)
kable(output,digits = 2)
NBA1415$ThreesHigh <- NBA1415$ThreesMade / NBA1415$ThreesAttempted
MaxEThreesHigh<-aggregate(ThreesHigh~Team,NBA1415,max)
NBA1415MaxEThreesHigh<-merge(NBA1415,MaxEThreesHigh)
output<-NBA1415MaxEThreesHigh[order(NBA1415MaxEThreesHigh$ThreesHigh,decreasing = T),c("Team","Name","ThreesHigh")]
library(knitr)
kable(output, digits=2)
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
head(polio)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
head(polio)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
head(polio)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
x<-scale(mtcars$hp[-1]);y<-scale(mtcars$mpg[-1])
dataFrame <- data.frame(x,y)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
wss <- (nrow(dataMatrix)-1)*sum(apply(dataMatrix,2,var))
for (i in 2:(nrow(dataMatrix)-1)) {
wss[i] <- sum(kmeans(dataMatrix,centers=i)$withinss)
}
par(mfrow=c(1,1), mar = c(4,4,1,1)) #下,左,上,右
plot(1:(nrow(dataMatrix)-1), wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
kmeans(dataMatrix,centers=)
kmeans(dataMatrix,centers=3)
library(reshape2)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable,data=polio.m,FUN=sum,na.rm=F)
head(polio.sumYear)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable,data=polio.m,FUN=sum,na.rm=F)
head(polio.sumYear)
View(polio)
View(dataFrame)
View(polio)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "steelblue") #數值低：白色
ggplot(polio.sumYear)+ #資料為polio.sumYear
geom_line(aes(x=YEAR,y=value,color=variable))+ #geom_line:畫折線圖
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "steelblue") #數值低：白色
ggplot(polio.sumYear)+ #資料為polio.sumYear
geom_line(aes(x=YEAR,y=value,color=variable))+ #geom_line:畫折線圖
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "steelblue") #數值低：白色
ggplot(polio.sumYear)+ #資料為polio.sumYear
geom_line(aes(x=YEAR,y=value,color=variable))+ #geom_line:畫折線圖
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "steelblue") #數值低：白色
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "steelblue") #數值低：白色
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "red") #數值低：白色
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "red")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "red") #數值低：白色
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "blue") #數值低：白色
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "blue")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "blue") #數值低：白色
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "gray") #數值低：白色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
USMap <- get_map(location = "United States", zoom = 4)
densityMap<-ggmap(USMap, extent = "device") +
geom_density2d(data = PopPoint, aes(x = lon, y = lat), size = 0.3) +
stat_density2d(data = PopPoint,
aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 16, geom = "polygon") +
scale_fill_gradient(low = "green", high = "red", guide = FALSE) +
scale_alpha(range = c(0, 0.3), guide = FALSE)
library(ggplot2)
library(ggmap)
USMap <- get_map(location = "United States", zoom = 4)
densityMap<-ggmap(USMap, extent = "device") +
geom_density2d(data = PopPoint, aes(x = lon, y = lat), size = 0.3) +
stat_density2d(data = PopPoint,
aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 16, geom = "polygon") +
scale_fill_gradient(low = "green", high = "red", guide = FALSE) +
scale_alpha(range = c(0, 0.3), guide = FALSE)
ggplot(polio.sumYear)+ #資料為polio.sumYear
geom_line(aes(x=YEAR,y=value,color=variable))+ #geom_line:畫折線圖
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
ggplot(polio.sumYear)+ #資料為polio.sumYear
geom_line(aes(x=YEAR,y=value,color=variable))+ #geom_line:畫折線圖
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
ggplot(polio.sumYear)+ #資料為polio.sumYear
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
ggplot(polio.sumYear)+ #資料為polio.sumYear
geom_line(aes(x=YEAR,y=value,color=variable))
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
View(polio.m)
View(polio.sumYear)
str(polio.m)
ggplot(polio.sumYear)+ #資料為polio.sumYear
geom_line(aes(x=YEAR,y=value,color=variable))
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
ggplot(polio.sumYear)+ #資料為polio.sumYear
geom_line(polio.t)
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted+Position,
data =NBA1516)
# e+01: 10^1 / e-04: 10^(-4)
glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted+Position,
data =NBA1516)
# e+01: 10^1 / e-04: 10^(-4)
glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted+Position,
data =NBA1516)
# e+01: 10^1 / e-04: 10^(-4)
#source("https://bioconductor.org/biocLite.R")
#biocLite("impute")
library(impute)
dataMatrix2 <- impute.knn(dataMatrix2)$data
head(dataMatrix2,10)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
wss <- (nrow(dataMatrix)-1)*sum(apply(dataMatrix,2,var))
for (i in 2:(nrow(dataMatrix)-1)) {
wss[i] <- sum(kmeans(dataMatrix,centers=i)$withinss)
}
par(mfrow=c(1,1), mar = c(4,4,1,1)) #下,左,上,右
plot(1:(nrow(dataMatrix)-1), wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
dataMatrix2 <- as.matrix(mtcars)
## Randomly insert some missing data
dataMatrix2[sample(1:100,size=10,replace=FALSE)] <- NA
head(dataMatrix2,10)
#source("https://bioconductor.org/biocLite.R")
#biocLite("impute")
library(impute)
dataMatrix2 <- impute.knn(dataMatrix2)$data
head(dataMatrix2,10)
#讀入SportsAnalytics package
if (!require('SportsAnalytics')){
install.packages("SportsAnalytics")
library(SportsAnalytics)
}
#擷取2015-2016年球季球員資料
NBA1516<-fetch_NBAPlayerStatistics("15-16")
library(ggplot2)
ggplot(NBA1516,aes(x=TotalMinutesPlayed,y=TotalPoints))+
geom_point()+geom_smooth(method = "glm")
library(ggplot2)
ggplot(NBA1516,aes(x=TotalMinutesPlayed,y=TotalPoints))+
geom_point()+geom_smooth(method = "glm")
# e+01: 10^1 / e-04: 10^(-4)
glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted,
data =NBA1516)
glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted+Position,
data =NBA1516)
# e+01: 10^1 / e-04: 10^(-4)
sum2<-summary(TwoVar)
sum2$coefficients
OneVar<-glm(TotalPoints~TotalMinutesPlayed,data =NBA1516)
TwoVar<-glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted,
data =NBA1516)
ThreeVar<-glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted+Position,
data =NBA1516)
c(OneVar$aic,TwoVar$aic,ThreeVar$aic)
OneVar<-glm(TotalPoints~TotalMinutesPlayed,data =NBA1516)
TwoVar<-glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted,
data =NBA1516)
ThreeVar<-glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted+Position,
data =NBA1516)
c(OneVar$aic,TwoVar$aic,ThreeVar$aic)
library(ggplot2)
polio.t<-ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
library(ggplot2)
polio.t<-ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
library(ggplot2)
polio.t<-ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
ggplot(polio.m)+ #資料為polio.sumYear
geom_line(aes(x=YEAR,y=value,color=variable))+ #geom_line:畫折線圖
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")#疫苗
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
ggplot(polio.sumYear)+ #資料為polio.sumYear
geom_line(aes(x=YEAR,y=value,color=variable))+ #geom_line:畫折線圖
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")#疫苗
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "black",high = "white") #數值低：白色
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "black",high = "steelblue") #數值低：白色
library(ggplot2)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "black") #數值低：白色
library(reshape2)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
if (!require('rpart')){
install.packages("rpart")
library(rpart)
}
DT<-rpart(Position~Blocks+ThreesMade+Assists+Steals,data=NBA1516)
DT
#控球後衛（PG）、得分後衛（SG）、小前鋒（SF）、大前鋒（PF）和中鋒（C）
itemFrequencyPlot(Groceries,topN=20,type="absolute")
# Load the libraries
if (!require('arules')){
install.packages("arules");library(arules)
}
if (!require('datasets')){
install.packages("datasets");library(datasets)
}
data(Groceries) # Load the data set
Groceries@data@Dim #169 種商品，9835筆交易資料
itemFrequencyPlot(Groceries,topN=20,type="absolute")
# Get the rules
rules <- apriori(Groceries,
parameter = list(supp = 0.001, conf = 0.8),
control = list(verbose=F))
# Show the top 5 rules, but only 2 digits
options(digits=2)
inspect(rules[1:5])
rules<-sort(rules, by="confidence", decreasing=TRUE)
inspect(rules[1:5])
rules<-sort(rules, by="confidence", decreasing=TRUE)
inspect(rules[1:5])
summary(rules)
rulesR<-apriori(data=Groceries, parameter=list(supp=0.001,conf = 0.08),
appearance = list(default="lhs",rhs="whole milk"),
control = list(verbose=F))
rulesR<-sort(rulesR, decreasing=TRUE,by="confidence")
inspect(rulesR[1:5])
rulesL<-apriori(data=Groceries, parameter=list(supp=0.001,conf = 0.15,minlen=2),
appearance = list(default="rhs",lhs="whole milk"),
control = list(verbose=F))
rulesL<-sort(rulesL, decreasing=TRUE,by="confidence")
inspect(rulesL[1:5])
if (!require('arulesViz')){
install.packages("arulesViz"); library(arulesViz)
}
#Mac->http://planspace.org/2013/01/17/fix-r-tcltk-dependency-problem-on-mac/
plot(rules,method="graph",interactive=TRUE,shading=NA) #會跑一陣子
library(ggplot2)
ggplot(polio.sumYear, aes(YEAR, variable)) +
geom_tile(aes(fill = value),colour = "white")+
theme_bw()+geom_vline(xintercept=1955)+
scale_fill_gradient(low = "white",high = "black")
library(ggplot2)
ggplot(polio.sumYear, aes(YEAR, variable)) +
geom_tile(aes(fill = value),colour = "white")+
theme_bw()+geom_vline(xintercept=1955)+
scale_fill_gradient(low = "white",high = "red")
library(ggplot2)
ggplot(polio.sumYear, aes(YEAR, variable)) +
geom_tile(aes(fill = value),colour = "white")+
theme_bw()+geom_vline(xintercept=1955)+
scale_fill_gradient(low = "white",high = "purple")
